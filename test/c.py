import autogen
from dotenv import load_dotenv
import os
import requests
from bs4 import BeautifulSoup

# C·∫•u h√¨nh API key cho GROQ (n·∫øu c·∫ßn)
load_dotenv()
os.environ['GROQ_API_KEY'] = os.getenv('GROQ_API_KEY')

# C·∫•u h√¨nh cho c√°c agent
config_list = [
    {
        'model': 'llama-3.2-90b-text-preview',
        'base_url': 'https://api.groq.com/openai/v1',
        'api_key': os.environ['GROQ_API_KEY']
    }
]

# H√†m t√¨m ki·∫øm s·∫£n ph·∫©m tr√™n Ivymoda
def search_ivymoda(max_price=500000):
    url = "https://ivymoda.com/danh-muc/hang-nu-moi-ve"
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    
    products = []
    for item in soup.find_all('div', class_='item'):
        name = item.find('h3', class_='title').text.strip()
        price = item.find('div', class_='price').text.strip()
        price = int(''.join(filter(str.isdigit, price)))
        
        if price <= max_price:
            products.append({
                'name': name,
                'price': price
            })
    
    return products

# C·∫•u h√¨nh tools
tools = [
    {
        "type": "function",
        "function": {
            "name": "search_ivymoda",
            "description": "T√¨m ki·∫øm s·∫£n ph·∫©m tr√™n Ivymoda d∆∞·ªõi 500k",
            "parameters": {
                "type": "object",
                "properties": {
                    "max_price": {
                        "type": "number",
                        "description": "Gi√° t·ªëi ƒëa c·ªßa s·∫£n ph·∫©m"
                    }
                },
                "required": []
            }
        }
    }
]

# T·∫°o agent t√¨m ki·∫øm s·∫£n ph·∫©m
ivymoda_agent = autogen.AssistantAgent(
    name="Ivymoda_Agent",
    llm_config={"config_list": config_list, "tools": tools},
    system_message="""B·∫°n l√† m·ªôt tr·ª£ l√Ω mua s·∫Øm th√¥ng minh. Nhi·ªám v·ª• c·ªßa b·∫°n l√†:
    1. S·ª≠ d·ª•ng h√†m search_ivymoda ƒë·ªÉ t√¨m ki·∫øm s·∫£n ph·∫©m d∆∞·ªõi 500k tr√™n Ivymoda.
    2. Ph√¢n t√≠ch v√† t·ªïng h·ª£p k·∫øt qu·∫£ t√¨m ki·∫øm.
    3. ƒê·ªÅ xu·∫•t c√°c s·∫£n ph·∫©m ph√π h·ª£p nh·∫•t d·ª±a tr√™n gi√° c·∫£ v√† m√¥ t·∫£.
    4. Tr·∫£ l·ªùi c√°c c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng v·ªÅ s·∫£n ph·∫©m m·ªôt c√°ch chi ti·∫øt v√† h·ªØu √≠ch.
    H√£y s·ª≠ d·ª•ng ng√¥n ng·ªØ th√¢n thi·ªán v√† d·ªÖ hi·ªÉu.""",
    function_map={"search_ivymoda": search_ivymoda}
)

user_proxy = autogen.UserProxyAgent(
    name="Shopper",
    system_message="B·∫°n l√† m·ªôt ng∆∞·ªùi mua s·∫Øm ƒëang t√¨m ki·∫øm s·∫£n ph·∫©m tr√™n Ivymoda v·ªõi gi√° d∆∞·ªõi 500k. H√£y ƒë·∫∑t c√¢u h·ªèi v√† y√™u c·∫ßu g·ª£i √Ω t·ª´ Ivymoda_Agent.",
    human_input_mode="TERMINATE",
    code_execution_config={"use_docker": False}
)

# T·∫°o m·ªôt GroupChat
groupchat = autogen.GroupChat(
    agents=[user_proxy, ivymoda_agent],
    messages=[],
    max_round=10
)

manager = autogen.GroupChatManager(
    groupchat=groupchat,
    llm_config={"config_list": config_list},
    system_message="""B·∫°n ƒëang qu·∫£n l√Ω m·ªôt cu·ªôc tr√≤ chuy·ªán v·ªÅ mua s·∫Øm tr√™n Ivymoda. Nhi·ªám v·ª• c·ªßa b·∫°n l√†:
    1. ƒêi·ªÅu ph·ªëi cu·ªôc tr√≤ chuy·ªán gi·ªØa ng∆∞·ªùi mua v√† Ivymoda_Agent.
    2. ƒê·∫£m b·∫£o Ivymoda_Agent cung c·∫•p th√¥ng tin ch√≠nh x√°c v√† h·ªØu √≠ch v·ªÅ s·∫£n ph·∫©m.
    3. T·ªïng h·ª£p c√°c ƒë·ªÅ xu·∫•t s·∫£n ph·∫©m v√† gi√∫p ng∆∞·ªùi mua ƒë∆∞a ra quy·∫øt ƒë·ªãnh cu·ªëi c√πng.
    4. K·∫øt th√∫c cu·ªôc tr√≤ chuy·ªán khi ng∆∞·ªùi mua ƒë√£ c√≥ ƒë·ªß th√¥ng tin c·∫ßn thi·∫øt."""
)

# Kh·ªüi ch·∫°y cu·ªôc tr√≤ chuy·ªán
user_proxy.initiate_chat(
    manager,
    message="Ch√†o b·∫°n! T√¥i ƒëang t√¨m ki·∫øm m·ªôt s·ªë s·∫£n ph·∫©m th·ªùi trang n·ªØ tr√™n Ivymoda v·ªõi gi√° d∆∞·ªõi 500k. B·∫°n c√≥ th·ªÉ gi√∫p t√¥i kh√¥ng?"
)

print("Cu·ªôc tr√≤ chuy·ªán v·ªÅ mua s·∫Øm tr√™n Ivymoda ƒë√£ k·∫øt th√∫c! üõçÔ∏èüëö")